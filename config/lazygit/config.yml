gui:
  sidePanelWidth: 0.2 # gives you more space to show things side-by-side
  scrollHeight: 10 # how many lines you scroll by

git:
  paging:
    colorArg: never
    pager: ydiff -p cat -s  --width={{columnWidth}}

customCommands:
  - key: "C"
    context: "files"
    description: "Create new conventional commit"
    stream: true
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope - Add '(<scope>)'"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Breaking change - Add '!'"
        key: "Breaking"
        initialValue: ""
      - type: "input"
        title: "Title"
        key: "Title"
        initialValue: ""
      - type: "input"
        title: "Description"
        key: "Description"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: |
      {{- $scope := "" }}
      {{- if ne .Form.Scope "" }}
      {{- $scope = printf "(%s)" .Form.Scope }}
      {{- end }}
      {{- if eq .Form.Description "" }}
      git commit --message "{{.Form.Type}}{{$scope}}{{.Form.Breaking}}: {{.Form.Title}}"
      {{else}}
      git commit --message "{{.Form.Type}}{{$scope}}{{.Form.Breaking}}: {{.Form.Title}}
      {{.Form.Description}}
      "
      {{- end }}
    loadingText: "Creating conventional commit..."
